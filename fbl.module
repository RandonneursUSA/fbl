<?php

/**
 * @file
 * Module file for the field based login module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function fbl_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the content_type_dependency module.
    case 'help.page.fbl':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Field Based login') . '</p>';
      $output .= '<p>' . t('This module extends drupal core user login feature, using this module admin is allows to configure user account field as loggable. like mobile number or serial number field & users can login with the same mobile number or serial number field. for more info visit <a href=":link">here</a>..', [':link' => 'https://www.drupal.org/project/fbl']) . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Assigning user field to user login') . '</dt>';
      return $output;
  }
}

/**
 * Implements hook_form_alter().
 */
function fbl_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if ($form_id == 'user_login_form') {
    // Load fbl configurations.
    $fbl_config = \Drupal::config('fbl.settings');
    $fbl_value = $fbl_config->get('field_based_login');
    array_unshift($form['#validate'], 'fbl_login_name_validate');
    if (!empty($fbl_value['label'])) {
      $form['name']['#title'] = $fbl_value['label'];
    }
    if ($form_id == 'user_login_form' && !empty($fbl_value['field_desc'])) {
      $form['name']['#description'] = t("@unique_field_desc", ['@unique_field_desc' => $fbl_value['field_desc']]);
    }
  }
  // Set fbl validator on top of other register validators.
  if ($form_id == 'user_form' || $form_id == 'user_register_form') {
    $form['#validate'][] = 'fbl_user_register_validate';
  }

}

/**
 * Implementation of fbl_user_register_validate().
 */
function fbl_user_register_validate($form, FormStateInterface &$form_state) {
  // Load fbl configurations.
  $fbl_config = \Drupal::config('fbl.settings');
  $fbl_value = $fbl_config->get('field_based_login');
  $field_name = $fbl_value['field'];
  if (isset($field_name) && !empty($field_name)) {
    $new_user_input = $form_state->getValue($field_name);
    $query = \Drupal::entityQuery('user');
    $query->condition($field_name . '.value', $new_user_input[0]['value']);
    $results = $query->accessCheck(TRUE)->execute();
    if (count($results)) {
      $form_state->setErrorByName($field_name, t('The entered value already exists. Please enter a different value'));
    }
  }
}

/**
 * Custom validate function to check custom user field records.
 */
function fbl_login_name_validate($form, FormStateInterface &$form_state) {
  // Load fbl configurations.
  $fbl_config = \Drupal::config('fbl.settings');
  $fbl_value = $fbl_config->get('field_based_login');
  // If configuration not yet set, then allow users to login by username.
  $allow_user_login_by_name = isset($fbl_value['allow_user_name']) ? $fbl_value['allow_user_name'] : 1;
  $allow_user_login_by_email = $fbl_value['allow_user_email'];
  $user_not_found = TRUE;
  $login_input = $form_state->getValue('name');
  if (!empty($fbl_value['field']) || $allow_user_login_by_email) {
    if (!empty($fbl_value['field'])) {
      $query = \Drupal::entityQuery('user');
      $query->condition($fbl_value['field'] . '.value', $login_input);
      $results = $query->accessCheck(TRUE)->execute();

      if ($results) {
        $user_not_found = FALSE;
        // Check for multiple records.
        if (count($results) > 1) {
          $form_state->setErrorByName('name', t('Sorry, Please contact administration. There are multiple user records found with same input.'));
          // Todo : enter field information.
          \Drupal::logger('user')->notice('Login attempt failed for %user. with field', ['%user' => $login_input]);
        }
        else {
          $uid = array_keys($results)[0];
          $connection = \Drupal::database();
          $query = $connection->select('users_field_data', 'u');
          $query->fields('u', ['name']);
          $query->condition('u.uid', $uid);
          $name = $query->execute()->fetchObject();
          $form_state->setValue('name', $name->name);
        }
      }
    }
    // Load user object by username.
    $user_load_by_name = user_load_by_name($login_input);
    if ($user_load_by_name && $allow_user_login_by_name) {
      $user_not_found = FALSE;
    }

    // Load user object by its email.
    $user_load_by_mail = user_load_by_mail($login_input);
    if ($user_load_by_mail && $allow_user_login_by_email) {
      $user_not_found = FALSE;
      // getUsername was dropped from Drupal 9 - PL
      // $form_state->setValue('name', $user_load_by_mail->getUsername());
      $form_state->setValue('name', $user_load_by_mail->getDisplayName());
    }

    if ($user_not_found) {
      // $form_state->setErrorByName('name', t('Sorry, unrecognized username or password. <a href="@password">Have you forgotten your password?</a>', ['@password' => Url::fromRoute('user.pass')]));
      $form_state->setErrorByName('name', t('Sorry, unrecognized username or password. Have you forgotten your password?'));
      \Drupal::logger('user')->notice('Login attempt failed for %user.', ['%user' => $login_input]);
    }
  }

}
